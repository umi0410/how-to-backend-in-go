// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package main is a generated GoMock package.
package main

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	ent "github.com/umi0410/how-to-backend-in-go/testcode/ent"
)

// GomockRepository is a mock of UserRepository interface.
type GomockRepository struct {
	ctrl     *gomock.Controller
	recorder *GomockRepositoryMockRecorder
}

// GomockRepositoryMockRecorder is the mock recorder for GomockRepository.
type GomockRepositoryMockRecorder struct {
	mock *GomockRepository
}

// NewGomockRepository creates a new mock instance.
func NewGomockRepository(ctrl *gomock.Controller) *GomockRepository {
	mock := &GomockRepository{ctrl: ctrl}
	mock.recorder = &GomockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *GomockRepository) EXPECT() *GomockRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *GomockRepository) Create(input *UserCreateInput) (*ent.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", input)
	ret0, _ := ret[0].(*ent.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *GomockRepositoryMockRecorder) Create(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*GomockRepository)(nil).Create), input)
}
